#include <rclcpp/rclcpp.hpp>
#include <sensor_msgs/msg/joint_state.hpp>
#include <imgui.h>

class JointStateSubscriber : public rclcpp::Node
{
public:
    JointStateSubscriber() : Node("joint_state_subscriber")
    {
        // Subscribe to the joint state topic
        joint_state_subscriber_ = create_subscription<sensor_msgs::msg::JointState>(
            "joint_states", 10, std::bind(&JointStateSubscriber::jointStateCallback, this, std::placeholders::_1));
    }

private:
    void jointStateCallback(const sensor_msgs::msg::JointState::SharedPtr msg)
    {
        // Clear the ImGui window
        ImGui::Begin("Joint Sliders");
        ImGui::SetWindowSize(300, 400);
        ImGui::SetWindowPos(10, 10);
        ImGui::Text("Joint Positions");

        // Render ImGui sliders for each joint
        for (size_t i = 0; i < msg->name.size(); ++i)
        {
            ImGui::SliderFloat(msg->name[i].c_str(), &msg->position[i], -1.0, 1.0);
        }

        ImGui::End();
    }

    rclcpp::Subscription<sensor_msgs::msg::JointState>::SharedPtr joint_state_subscriber_;
};